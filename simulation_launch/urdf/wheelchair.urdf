<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from wheelchair.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="alphabot2">
  <!--base footprint-->
  <link name="base_footprint">
    <origin xyz="0 0 0"/>
  </link>
  <!-- wheelchair base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.2 0.2 0.3"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.2 0.2 0.3"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="10"/>
      <inertia ixx="0.10833333333333334" ixy="0.0" ixz="0.0" iyy="0.10833333333333334" iyz="0.0" izz="0.06666666666666668"/>
    </inertial>
  </link>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.15"/>
  </joint>
  <link name="drive_wheel_l_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.05"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.0031666666666666675" ixy="0" ixz="0" iyy="0.0031666666666666675" iyz="0" izz="0.006250000000000001"/>
    </inertial>
  </link>
  <joint name="drive_wheel_l_joint" type="continuous">
    <parent link="base_link"/>
    <child link="drive_wheel_l_link"/>
    <origin rpy="0 0 0" xyz="0 0.1 -0.125"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="drive_wheel_r_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.05"/>
      </geometry>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.0031666666666666675" ixy="0" ixz="0" iyy="0.0031666666666666675" iyz="0" izz="0.006250000000000001"/>
    </inertial>
  </link>
  <joint name="drive_wheel_r_joint" type="continuous">
    <parent link="base_link"/>
    <child link="drive_wheel_r_link"/>
    <origin rpy="0 0 0" xyz="0 -0.1 -0.125"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="caster_wheel_f_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="9e-05" ixy="0.0" ixz="0.0" iyy="9e-05" iyz="0.0" izz="9e-05"/>
    </inertial>
  </link>
  <!-- 0 friction for gazebo (unless it does weird stuff)-->
  <gazebo reference="caster_wheel_f_link">
    <mu1 value="0"/>
    <mu2 value="0"/>
  </gazebo>
  <joint name="caster_wheel_f_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel_f_link"/>
    <origin rpy="0 0 0" xyz="0.085 0 -0.16"/>
  </joint>
  <link name="caster_wheel_b_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="9e-05" ixy="0.0" ixz="0.0" iyy="9e-05" iyz="0.0" izz="9e-05"/>
    </inertial>
  </link>
  <!-- 0 friction for gazebo (unless it does weird stuff)-->
  <gazebo reference="caster_wheel_b_link">
    <mu1 value="0"/>
    <mu2 value="0"/>
  </gazebo>
  <joint name="caster_wheel_b_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel_b_link"/>
    <origin rpy="0 0 0" xyz="-0.085 0 -0.16"/>
  </joint>
  <!-- diff drive plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <update_rate>30</update_rate>
      <!-- wheels -->
      <left_joint>drive_wheel_l_joint</left_joint>
      <right_joint>drive_wheel_r_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.2</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>100</max_wheel_torque>
      <max_wheel_acceleration>5.0</max_wheel_acceleration>
      <!-- input -->
      <!-- subscribe to the /cmd_vel topic-->
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <!-- When true, publish wheel odometry information -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- The robot localization package will publish this information -->
      <publish_odom_tf>true</publish_odom_tf>
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <!-- There will be a warning if both the robot state publisher and the differential drive package publishes the wheel transform (one of them will be ignored) -->
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
  <link name="camera_left_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="1.6666666666666667e-05" ixy="0.0" ixz="0.0" iyy="1.6666666666666667e-05" iyz="0.0" izz="1.6666666666666667e-05"/>
    </inertial>
  </link>
  <joint name="camera_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_left_link"/>
    <origin rpy="0 0 1.5707963267948966" xyz="0.0 0.1 0.15"/>
  </joint>
  <link name="camera_back_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="1.6666666666666667e-05" ixy="0.0" ixz="0.0" iyy="1.6666666666666667e-05" iyz="0.0" izz="1.6666666666666667e-05"/>
    </inertial>
  </link>
  <joint name="camera_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_back_link"/>
    <origin rpy="0 0 3.141592653589793" xyz="-0.1 0.0 0.15"/>
  </joint>
  <link name="camera_right_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="1.6666666666666667e-05" ixy="0.0" ixz="0.0" iyy="1.6666666666666667e-05" iyz="0.0" izz="1.6666666666666667e-05"/>
    </inertial>
  </link>
  <joint name="camera_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_right_link"/>
    <origin rpy="0 0 4.71238898038469" xyz="0.0 -0.1 0.15"/>
  </joint>
  <gazebo reference="camera_left_link">
    <sensor name="camera_left" type="wideanglecamera">
      <camera>
        <horizontal_fov>3.14159265359</horizontal_fov>
        <image>
          <width>320</width>
          <height>320</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>100</far>
        </clip>
        <lens>
          <type>stereographic</type>
          <scale_to_hfov>true</scale_to_hfov>
          <cutoff_angle>1.5707</cutoff_angle>
          <env_texture_size>512</env_texture_size>
        </lens>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <plugin filename="libgazebo_ros_camera.so" name="camera_left_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera_left</cameraName>
        <imageTopicName>camera_left/image_raw</imageTopicName>
        <cameraInfoTopicName>camera_left/camera_info</cameraInfoTopicName>
        <frameName>camera_left_link</frameName>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera_back_link">
    <sensor name="camera_back" type="wideanglecamera">
      <camera>
        <horizontal_fov>3.14159265359</horizontal_fov>
        <image>
          <width>320</width>
          <height>320</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>100</far>
        </clip>
        <lens>
          <type>stereographic</type>
          <scale_to_hfov>true</scale_to_hfov>
          <cutoff_angle>1.5707</cutoff_angle>
          <env_texture_size>512</env_texture_size>
        </lens>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <plugin filename="libgazebo_ros_camera.so" name="camera_back_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera_back</cameraName>
        <imageTopicName>camera_back/image_raw</imageTopicName>
        <cameraInfoTopicName>camera_back/camera_info</cameraInfoTopicName>
        <frameName>camera_back_link</frameName>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera_right_link">
    <sensor name="camera_right" type="wideanglecamera">
      <camera>
        <horizontal_fov>3.14159265359</horizontal_fov>
        <image>
          <width>320</width>
          <height>320</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>100</far>
        </clip>
        <lens>
          <type>stereographic</type>
          <scale_to_hfov>true</scale_to_hfov>
          <cutoff_angle>1.5707</cutoff_angle>
          <env_texture_size>512</env_texture_size>
        </lens>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <plugin filename="libgazebo_ros_camera.so" name="camera_right_plugin">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera_right</cameraName>
        <imageTopicName>camera_right/image_raw</imageTopicName>
        <cameraInfoTopicName>camera_right/camera_info</cameraInfoTopicName>
        <frameName>camera_right_link</frameName>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
</robot>
